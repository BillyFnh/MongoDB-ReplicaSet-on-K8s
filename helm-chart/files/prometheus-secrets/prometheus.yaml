global:
  scrape_interval:     15s
  evaluation_interval: 15s
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - 1cms-monitoring.cern.ch:30093
rule_files:
  - "/etc/prometheus/k8s.rules"
# remote_write:
#   - url: http://cms-monitoring-ha1.cern.ch:30428/api/v1/write
#     queue_config:
#       max_samples_per_send: 10000
#       max_shards: 30
#   - url: http://cms-monitoring-ha2.cern.ch:30428/api/v1/write
#     queue_config:
#       max_samples_per_send: 10000
#       max_shards: 30
scrape_configs:
  - job_name: "kube-eagle"
    static_configs:
        - targets: ["kube-eagle.default.svc.cluster.local:8080"]
  - job_name: "nginx-ingress-controller"
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - kube-system
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_container_port_number]
      action: keep
      regex: ^(10254)
  - job_name: "kubernetes-apiservers"
    kubernetes_sd_configs:
    - role: pod
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https
  - job_name: "kubernetes-nodes"
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics
  - job_name: "kubernetes-pods"
    kubernetes_sd_configs:
    - role: pod
    # for more information about prometheus relabeling see
    # https://blog.freshtracks.io/prometheus-relabel-rules-and-the-action-parameter-39c71959354a
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - source_labels: [__meta_kubernetes_pod_node_name]
      action: replace
      target_label: host
    - action: labeldrop
      regex: __meta_kubernetes_pod_label_pod_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: ns
    - action: labeldrop
      regex: __meta_kubernetes_namespace(.+)
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: apod
  - job_name: "kubernetes-cadvisor"
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor